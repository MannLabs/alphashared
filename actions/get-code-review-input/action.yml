name: 'Get Code Review Input'
description: 'Generate AI readable input data for code review'
inputs:
  PR_NUMBER:
    description: "Number of the pull request to analyze, pass value of 'github.event.number'"
    required: true
  GITHUB_TOKEN:
    description: "GitHub token, pass value of 'secrets.GITHUB_TOKEN'"
    required: true
  EXCLUDED_EXTENSIONS:
    description: "Semicolon separated list of file extensions to exclude from the 'all_files' artifact, e.g. 'ipynb;txt'"
    required: false
    default: ""
runs:
  using: "composite"
  steps:
  - uses: actions/checkout@v4
#    with:
#      fetch-depth: 0

  - name: Get changed files
    id: changed-files
    uses: tj-actions/changed-files@v44

  - name: Set up Python
    uses: actions/setup-python@v5
    with:
      python-version: '3.11'

  - name: Install dependencies
    shell: bash
    run: |
      python -m pip install --upgrade pip
      pip install PyGithub==2.3.0

  - name: Set GitHub Path
    run: echo "$GITHUB_ACTION_PATH" >> $GITHUB_PATH
    shell: bash
    env:
      GITHUB_ACTION_PATH: ${{ github.action_path }}

  # Dump PR data
  - name: Dump PR
    env:
      PR_NUMBER: ${{inputs.PR_NUMBER}}
      GITHUB_TOKEN: ${{inputs.GITHUB_TOKEN}}
    shell: bash
    run: |
      echo changed files: '${{ steps.changed-files.outputs.all_changed_files }}'
      python ${{ github.action_path }}/pr_to_string.py '${{ steps.changed-files.outputs.all_changed_files }}' ${{ github.workspace }}/patches.txt
      head ${{ github.workspace }}/patches.txt
      tail ${{ github.workspace }}/patches.txt

  - uses: actions/upload-artifact@v4
    with:
      name: patches
      path: ${{ github.workspace }}/patches.txt
      if-no-files-found: error

  # Dump repository contents
  - uses: actions/checkout@v4
    with:
      ref: ${{ github.event.pull_request.base.ref }}

  - name: Dump changed files
    shell: bash
    continue-on-error: true
    run: |
      echo CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
      python ${{ github.action_path }}/files_to_string.py '${{ steps.changed-files.outputs.all_changed_files }}' ${{ github.workspace }}/changed_files.txt
      head ${{ github.workspace }}/changed_files.txt
      tail ${{ github.workspace }}/changed_files.txt

  - uses: actions/upload-artifact@v4
    with:
      name: changed_files
      path: ${{ github.workspace }}/changed_files.txt
      if-no-files-found: warn

  # upload artifacts
  - name: Dump whole codebase
    shell: bash
    continue-on-error: true  # although the script seems to return properly, in some cases we get `Error: Process completed with exit code 127.`
    run: |
      ALL_FILES=$(find ./ -name "*" -type f | grep -v "\.git" | tr "\n" ";")
      echo ALL_FILES: $ALL_FILES
      python ${{ github.action_path }}/files_to_string.py $ALL_FILES ${{ github.workspace }}/all_files.txt  ${{ inputs.EXCLUDED_EXTENSIONS }}
      head ${{ github.workspace }}/all_files.txt
      tail ${{ github.workspace }}/all_files.txt

  - uses: actions/upload-artifact@v4
    with:
      name: all_files
      path: ${{ github.workspace }}/all_files.txt
      if-no-files-found: warn

