name: 'Get Code Review Input'
description: 'Generate AI readable input data for code review'
inputs:
  PR_NUMBER:
    description: ""
    required: true
  GITHUB_TOKEN:
    description: ""
    required: true
runs:
  using: "composite"
  steps:
  - uses: actions/checkout@v4
#    with:
#      fetch-depth: 0

  - name: Get changed files
    id: changed-files
    uses: tj-actions/changed-files@v44

  - name: Set up Python
    uses: actions/setup-python@v5
    with:
      python-version: '3.11'

  - name: Install dependencies
    shell: bash
    run: |
      python -m pip install --upgrade pip
      pip install PyGithub==2.3.0

  - name: Set GitHub Path
    run: echo "$GITHUB_ACTION_PATH" >> $GITHUB_PATH
    shell: bash
    env:
      GITHUB_ACTION_PATH: ${{ github.action_path }}

  # Dump PR data
  - name: Dump PR
    env:
      PR_NUMBER: ${{inputs.PR_NUMBER}}
      GITHUB_TOKEN: ${{inputs.GITHUB_TOKEN}}
    shell: bash
    run: |
      echo changed files: '${{ steps.changed-files.outputs.all_changed_files }}'
      python ${{ github.action_path }}/pr_to_string.py '${{ steps.changed-files.outputs.all_changed_files }}' ${{ github.workspace }}/patches.txt
      head ${{ github.workspace }}/patches.txt
      tail ${{ github.workspace }}/patches.txt

  - uses: actions/upload-artifact@v4
    with:
      name: patches
      path: ${{ github.workspace }}/patches.txt
      if-no-files-found: error

  # Dump repository contents
  - uses: actions/checkout@v4
    with:
      ref: ${{ github.event.pull_request.base.ref }}

  - name: Dump whole codebase
    shell: bash
    run: |
      ALL_FILES=$(find ./ -name '*' -type f | grep -v "\.git")
      echo ALL_FILES: $ALL_FILES
      python ${{ github.action_path }}/files_to_string.py '$ALL_FILES' ${{ github.workspace }}/all_files.txt
      head ${{ github.workspace }}/all_files.txt
      tail ${{ github.workspace }}/all_files.txt

  - name: Dump changed files
    shell: bash
    run: |
      CHANGED_FILES=${{ steps.changed-files.outputs.all_changed_files }}
      echo CHANGED_FILES: $CHANGED_FILES
      python ${{ github.action_path }}/files_to_string.py '$CHANGED_FILES' ${{ github.workspace }}/changed_files.txt
      head ${{ github.workspace }}/changed_files.txt
      tail ${{ github.workspace }}/changed_files.txt

  # upload artifacts
  - uses: actions/upload-artifact@v4
    with:
      name: all_files
      path: ${{ github.workspace }}/all_files.txt
      if-no-files-found: error

  - uses: actions/upload-artifact@v4
    with:
      name: changed_files
      path: ${{ github.workspace }}/changed_files.txt
      if-no-files-found: error

