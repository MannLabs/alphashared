name: Automated Code Review



inputs:
  GITHUB_EVENT_NUMBER:
    description: "Number of the pull request to analyze, pass value of 'github.event.number'"
    required: true
  EXCLUDED_EXTENSIONS:
    description: "Semicolon separated list of file extensions to exclude from the 'all_files' artifact, e.g. 'ipynb;txt'"
    required: false
    default: ""
  ANTHROPIC_API_KEY:
    description: "API key for the Anthropic API"
    required: true
  GITHUB_TOKEN:
    description: "GitHub token, pass value of 'secrets.GITHUB_TOKEN'"
    required: true
  CODE_REVIEW_SYSTEM_MESSAGE:
    description: "System message for the review"
    required: true
  CODE_REVIEW_PROMPT:
    description: "Prompt for the review"
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3

    - name: Security verification
      shell: bash
      env:
        ORG_NAME: MannLabs
        REPO_OWNER: ${{ github.repository_owner }}
        REPO: ${{ github.repository }}
        ACTOR: ${{ github.triggering_actor }}

      run: |        
        echo ACTOR="${ACTOR}" REPO_OWNER="${REPO_OWNER}" REPO=${REPO}
        
        if [ "${REPO_OWNER}" != "$ORG_NAME" ]; then
          echo "Error: The organization is not $ORG_NAME"
          exit 1
        fi

# this does not work with github token, would need a PAT
#        # Query the GitHub API to check if the actor is an org member
#        STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" \
#          -H "Authorization: Bearer ${{ inputs.GITHUB_TOKEN }}" \
#          -H "Accept: application/vnd.github+json" \
#          -H "X-GitHub-Api-Version: 2022-11-28" \
#          "https://api.github.com/orgs/$ORG_NAME/members/${ACTOR}")
#
#        if [ "$STATUS_CODE" -ne 204 ]; then
#          echo "Error $STATUS_CODE: $ACTOR is not a member of the organization $ORG_NAME"
#          exit 1
#        fi
#
#        echo "$ACTOR verified as organization member"

    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v44

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install httpx==0.27.0
        pip install anthropic==0.39.0 PyGithub==2.5.0 untruncate_json==1.0.0

    - name: Set GitHub Path
      run: echo "$GITHUB_ACTION_PATH" >> $GITHUB_PATH
      shell: bash
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}

    # Dump PR data
    - name: Dump PR
      env:
        GITHUB_EVENT_NUMBER: ${{inputs.GITHUB_EVENT_NUMBER}}
        GITHUB_TOKEN: ${{inputs.GITHUB_TOKEN}}
      shell: bash
      run: |
        echo changed files: '${{ steps.changed-files.outputs.all_changed_files }}'
        python ${{ github.action_path }}/pr_to_string.py '${{ steps.changed-files.outputs.all_changed_files }}' ${{ github.workspace }}/patches.txt
        head ${{ github.workspace }}/patches.txt

    - uses: actions/upload-artifact@v4
      with:
        name: patches
        path: ${{ github.workspace }}/patches.txt
        if-no-files-found: error


    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.base.ref }}

    - name: Dump changed files
      shell: bash
      continue-on-error: true
      run: |
        echo CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        python ${{ github.action_path }}/files_to_string.py '${{ steps.changed-files.outputs.all_changed_files }}' ${{ github.workspace }}/changed_files.txt

    - uses: actions/upload-artifact@v4
      with:
        name: changed_files
        path: ${{ github.workspace }}/changed_files.txt
        if-no-files-found: warn

    # this is lost by checkout?
    - uses: actions/download-artifact@v4
      with:
        name: patches
        path: ${{ github.workspace }}

    - name: Run code review
      continue-on-error: true
      env:
        ANTHROPIC_API_KEY: ${{ inputs.ANTHROPIC_API_KEY }}
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        GITHUB_EVENT_NUMBER: ${{ inputs.GITHUB_EVENT_NUMBER }}
        CODE_REVIEW_PROMPT: ${{ inputs.CODE_REVIEW_PROMPT }}
        CODE_REVIEW_SYSTEM_MESSAGE: ${{ inputs.CODE_REVIEW_SYSTEM_MESSAGE }}
        GITHUB_WORKSPACE_PATH: ${{ github.workspace }}
      shell: bash
      run: python ${{ github.action_path }}/code_review_bot.py ${{ github.workspace }}/changed_files.txt ${{ github.workspace }}/patches.txt

    - uses: actions/upload-artifact@v4
      with:
        name: answer
        path: ${{ github.workspace }}/answer.txt
        if-no-files-found: warn
