# syntax=docker/dockerfile:1

# Dockerfile to update requirements.
# build and run:
# put this Dockerfile next to the requirements folder
# docker build -f Dockerfile --progress=plain --build-arg="REQUIREMENTS_FILE_NAME=requirements.txt" -t update_requirements .
# docker run -v ./requirements/:/app/output -t update_requirements

ARG PYTHON_VERSION=3.11
ARG UV_VERSION=0.5.31
ARG REQUIREMENTS_FILE_NAME=requirements.txt
ARG FREEZE_FILE_NAME=_requirements.freeze.txt
ARG CURRENT_DATE=n/a

FROM python:${PYTHON_VERSION}

# Prevents Python from writing pyc files.
ENV PYTHONDONTWRITEBYTECODE=1

# Keeps Python from buffering stdout and stderr to avoid situations where
# the application crashes without emitting any logs due to buffering.
ENV PYTHONUNBUFFERED=1

WORKDIR app

RUN curl -LsSf https://astral.sh/uv/${UV_VERSION}/install.sh | sh

COPY requirements/${REQUIREMENTS_FILE_NAME} /app/req/requirements.txt

RUN /root/.local/bin/uv venv

RUN /root/.local/bin/uv pip install -r /app/req/requirements.txt

RUN echo "# Autogenerated by alphashared workflow. Do not edit manually! Last update: $CURRENT_DATE" > /app/${FREEZE_FILE_NAME}
RUN /root/.local/bin/uv pip freeze >> /app/${FREEZE_FILE_NAME}

CMD cp *.txt /app/output/

