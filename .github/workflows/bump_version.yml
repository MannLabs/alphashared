# Bump the version of the project and create a pull request to merge the changes.
# In case 'prerelease', only the running number (-dev1, -dev2, etc.) is bumped -> 1 PR
# Otherwise, the version is bumped (first PR) and a second PR is created to prepare the next development version
name: Bump version

on:
  workflow_call:
    inputs:
      bump_type:
        description: 'Bump type'
        required: true
        default: 'patch'
        type: string
#        options:
#        - patch
#        - minor
#        - major
#        - prerelease


jobs:
  bump:
    name: Bump version
    runs-on: ubuntu-latest
    env:
      BUMP_MY_VERSION_VERSION: 0.29.0
    steps:
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # The API of the gh action offered by bump-my-version is a bit limited, so we need to use bump-my-version directly
      # cf. https://github.com/callowayproject/bump-my-version/blob/master/action.yml
      - name: Install bump-my-version
        shell: bash
        run: pip install "bump-my-version==${{env.BUMP_MY_VERSION_VERSION}}"

      - name: Setting up git config
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.email "${GITHUB_ACTOR_ID}+${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global user.name "$(gh api /users/${GITHUB_ACTOR} | jq .name -r)"
          git config -l

      - name: First Bump - Checkout the code
        uses: actions/checkout@v4
        # we always bump the version on the main branch

      - name: First Bump - Get branch name
        id: get_branch_name
        run: |
          echo BRANCH_NAME=bump_$${ inputs.bump_type }}_from_$(bump-my-version show current_version) >> $GITHUB_OUTPUT

# bump-my-version needs to be called in a specific order to bump the version correctly:
# Example:  We have just released 1.9.2, so current version number is 1.9.3-dev0
# Read '1.9.3-dev0' as 'first dev version of next release, which we guess is 1.9.3'
#
# use case 1: bump version to release
# first PR:
#  desired version: 2.0.0 : 1.9.3-dev0 -> 2.0.0: bump major, bump pre_l
#  desired version: 1.10.0 : 1.9.3-dev0 -> 1.10.0: bump minor, bump pre_l
#  desired version: 1.9.3 : 1.9.3-dev0 -> 1.9.3: bump pre_l
#
# second PR:
# 1.10.0 (=resulting version from first PR) -> 1.10.1-dev0: bump pre_n
#
#
# use case 2: bump version to pre-release
#  1.9.3-dev0 -> 1.9.3-dev1: bump pre_n  # Note: just bump dev, not patch etc.

      - name: First Bump - Bump version
        id: bump
        run: |
          previous_version=$(bump-my-version show current_version)
          echo "previous-version=$previous_version" >> $GITHUB_OUTPUT
          
          if [ "${{ inputs.bump_type }}" == "prerelease"  ]; then
            bump-my-version bump pre_n --commit --no-tag -vv
          elif [ "${{ inputs.bump_type }}" != "patch" ]; then
            # for patch, no need to increment, we just need to bump pre_l
            bump-my-version bump ${{ inputs.bump_type }} --commit --no-tag -vv
          fi
          
          # drop the "dev" label
          if [ "${{ inputs.bump_type }}" != "prerelease" ]; then
            bump-my-version bump pre_l --commit --no-tag -vv
          fi
          
          current_version=$(bump-my-version show current_version)
          echo "current-version=$current_version" >> $GITHUB_OUTPUT
          
          if [[ "$current_version" == "$previous_version" ]]; then
            echo "Version was not bumped!"
            exit 1
          fi
          
      - name: First Bump - Push changes to GitHub
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{steps.get_branch_name.outputs.BRANCH_NAME}}
          # no force push: fail if branch already exists

      - name: First Bump - Create a pull request
        id: create-pull-request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          branch: ${{steps.get_branch_name.outputs.BRANCH_NAME}}
          title: "[VERSION] Bump version to ${{ steps.bump.outputs.current-version }}"
          body: "Bumps the version to ${{ steps.bump.outputs.current-version }} (from previous version ${{ steps.bump.outputs.previous-version }}). Autogenerated by alphashared workflow."
          delete-branch: true

      # In case we are bumping to a pre-release, we don't need to create a second PR so the rest is skipped
      - name: Second Bump - Checkout the code
        if: ${{ inputs.bump_type  != 'prerelease' }}
        uses: actions/checkout@v4
        with:
          ref: ${{steps.get_branch_name.outputs.BRANCH_NAME}}

      - name: Second Bump - Bump version
        id: bump2
        if: ${{ inputs.bump_type  != 'prerelease' }}
        run: |          
          previous_version=$(bump-my-version show current_version)
          echo "previous-version2=$previous_version" >> $GITHUB_OUTPUT
          
          bump-my-version bump patch -vv

          current_version=$(bump-my-version show current_version)
          echo "current-version2=$current_version" >> $GITHUB_OUTPUT

      - name: Second Bump - Push changes to GitHub
        if: ${{ inputs.bump_type  != 'prerelease' }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{steps.get_branch_name.outputs.BRANCH_NAME}}-prepare-next-version
          # no force push: fail if branch already exists

      - name: Second Bump - Create a pull request
        if: ${{ inputs.bump_type  != 'prerelease' }}
        id: create-pull-request2
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: ${{steps.get_branch_name.outputs.BRANCH_NAME}}
          branch: ${{steps.get_branch_name.outputs.BRANCH_NAME}}-prepare-next-version
          title: "[VERSION] Bump version to ${{ steps.bump2.outputs.current-version2 }} (merge after release)"
          body: |
            Merge right after release of ${{ steps.bump2.outputs.previous-version2 }}! 
            
            Bumps the version to ${{ steps.bump2.outputs.current-version2 }} 
            (from previous version ${{ steps.bump2.outputs.previous-version2 }}). 
            
            Autogenerated by alphashared workflow.
          delete-branch: true
